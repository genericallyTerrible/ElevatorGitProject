/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package ElevatorProj_TestPackage;

//import java.awt.Color;
import java.awt.event.KeyEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
//import java.awt.event.KeyListener;
//import javax.swing.JLabel;
//import javax.swing.JPanel;
//import javax.swing.Timer;

/**
 *
 * @author a-krause
 */
public class ElevatorTestFrame extends javax.swing.JFrame{

    /* Depricated
    ElevatorSystem elevatorSystem;
    */
    
    NewElevatorSystem elevatorSystem;
    
    /**
     * Creates new form ElevatorTestFrame
     */
    public ElevatorTestFrame() {
        initComponents();
        /*Depricated
        Elevator elevator1 = new Elevator(1);
        Elevator elevator2 = new Elevator(3);
        elevator2.closeDoor();
        elevatorSystem = new ElevatorSystem(elevator1, elevator2);
        */
        elevatorSystem = new NewElevatorSystem();
        ElevatorSystemPanel.add(elevatorSystem);
    }
    
    /*Depricated
    public void updateDisplay()
    {
    resetAll();
    elevator1FloorLabel.setText("" + elevatorSystem.elevator1.getFloor());
    elevator2FloorLabel.setText("" + elevatorSystem.elevator2.getFloor());
    
    if(elevatorSystem.elevator1.getFloor() == 1)
    elevatorColorChange(elevatorSystem.elevator1, door3Panel, door3Label);
    else if(elevatorSystem.elevator1.getFloor() == 2)
    elevatorColorChange(elevatorSystem.elevator1, door2Panel, door2Label);
    else if(elevatorSystem.elevator1.getFloor() == 3)
    elevatorColorChange(elevatorSystem.elevator1, door1Panel, door1Label);
    
    if(elevatorSystem.elevator2.getFloor() == 1)
    elevatorColorChange(elevatorSystem.elevator2, door6Panel, door6Label);
    else if(elevatorSystem.elevator2.getFloor() == 2)
    elevatorColorChange(elevatorSystem.elevator2, door5Panel, door5Label);
    else if(elevatorSystem.elevator2.getFloor() == 3)
    elevatorColorChange(elevatorSystem.elevator2, door4Panel, door4Label);
    }*/
    
    /* Depricated
    private void elevatorColorChange(Elevator elevator, JPanel panel, JLabel label)
    {
    if(elevator.isDoorOpen())
    {
    panel.setBackground(Color.GREEN);
    label.setText("]    [");
    }
    else
    {
    panel.setBackground(Color.YELLOW);
    label.setText("=][=");
    }
    }*/
    
    /* Depricated
    private void resetAll()
    {
    reset(door1Panel, door1Label);
    reset(door2Panel, door2Label);
    reset(door3Panel, door3Label);
    reset(door4Panel, door4Label);
    reset(door5Panel, door5Label);
    reset(door6Panel, door6Label);
    }*/
    
    /*Depricated
    private void reset(JPanel panel, JLabel label)
    {
    panel.setBackground(Color.white);
    label.setText("=][=");
    }*/
    
    //@Override
    //currently a work in progress
    public void keyTyped(KeyEvent e) throws InterruptedException {
        switch(e.getKeyCode()) {
            case KeyEvent.VK_1 :    //user released non-numpad '1' key
                
                
                break;
                
            case KeyEvent.VK_2 :    //user released non-numpad '2' key
                
                
                break;
                
            case KeyEvent.VK_3 :    //user released non-numpad '3' key
                
                
                break;
                
            case KeyEvent.VK_NUMPAD1 :  //user released numpad '1' key
                
                
                break;
                
            case KeyEvent.VK_NUMPAD2 :  //user released numpad '2' key
                
                
                break;
                
            case KeyEvent.VK_NUMPAD3 :  //user released numpad '3' key
                
                
                break;
                
            case KeyEvent.VK_W : //user released keyboard 'w' key
            
                
                break;
                
            case KeyEvent.VK_A : //user released keyboard 'a' key

                
                break;
                
            case KeyEvent.VK_S : //user released keybaord 's' key
                
                
                break;
                
            case KeyEvent.VK_Z : //user released keyboard 'z' key
                
                
                break;
                
            default: 
                System.err.println("Invalid Key Stroke");
                elevatorSystem.setDoorClosed(2, 1);
        }
    } 
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        frameTitle = new javax.swing.JLabel();
        floor3InstructionsDown = new javax.swing.JLabel();
        floor2InstructionsUp = new javax.swing.JLabel();
        floor2InstructionsDown = new javax.swing.JLabel();
        floor1InstructionsUp = new javax.swing.JLabel();
        ElevatorSystemPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        frameTitle.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        frameTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        frameTitle.setText("Elevators");
        frameTitle.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        floor3InstructionsDown.setText("Down: W");

        floor2InstructionsUp.setText("Up: A");

        floor2InstructionsDown.setText("Down: S");

        floor1InstructionsUp.setText("Up: Z");

        ElevatorSystemPanel.setMaximumSize(new java.awt.Dimension(195, 265));
        ElevatorSystemPanel.setMinimumSize(new java.awt.Dimension(195, 265));
        ElevatorSystemPanel.setPreferredSize(new java.awt.Dimension(195, 265));
        ElevatorSystemPanel.setLayout(new java.awt.GridBagLayout());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(frameTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(floor3InstructionsDown)
                            .addComponent(floor2InstructionsUp)
                            .addComponent(floor1InstructionsUp)
                            .addComponent(floor2InstructionsDown))
                        .addGap(39, 39, 39)
                        .addComponent(ElevatorSystemPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(frameTitle)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addComponent(floor3InstructionsDown)
                        .addGap(43, 43, 43)
                        .addComponent(floor2InstructionsUp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(floor2InstructionsDown)
                        .addGap(42, 42, 42)
                        .addComponent(floor1InstructionsUp))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(ElevatorSystemPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        try {
            keyTyped(evt);
        } catch (InterruptedException ex) {
            Logger.getLogger(ElevatorTestFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ElevatorTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ElevatorTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ElevatorTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ElevatorTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ElevatorTestFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ElevatorSystemPanel;
    private javax.swing.JLabel floor1InstructionsUp;
    private javax.swing.JLabel floor2InstructionsDown;
    private javax.swing.JLabel floor2InstructionsUp;
    private javax.swing.JLabel floor3InstructionsDown;
    private javax.swing.JLabel frameTitle;
    // End of variables declaration//GEN-END:variables
}
